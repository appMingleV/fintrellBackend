import mongoose from "mongoose";

const formDataSchema = new mongoose.Schema({
     enterpriseId:{
            type: mongoose.Schema.Types.ObjectId,
            ref: 'Enterprise',
            required: [true,"enterprise id is required"],
        },
    capital: Number,
    reserves: Number,
    netWorth: Number,
    termLoans: Number,
    unsecuredLoans: Number,
    otherTermLiabilities: Number,
    totalTermLiabilities: Number,
    sundryCreditors: Number,
    bankBorrowingsCC: Number,
    provision: Number,
    otherCurrentLiabilities: Number,
    otherAdvances: Number,
    totalCurrentLiabilities: Number,
    totalOutsideLiabilities: Number,
    totalLiabilities: Number,
    fixedAssets: Number,
    depreciation: Number,
    netBlock: Number,
    cashAndBankBalance: Number,
    advancestosuppliers: Number,
    othercurrentassets: Number,
    stock: Number,
    investments: Number,
    receivables: Number,
    totalCurrentAssets: Number,
    investmentsAssets: Number,
    otherNonCurrentAssets: Number,
    totalNonCurrentAssets: Number,
    accumulatedLosses: Number,
    otherIntangibleAssets: Number,
    totalIntangibleAssets: Number,
    totalAssets: Number,
    controlAssetTotal: Number,
    capitalWorkingCapital: Number,
    generalReserves: Number,
    otherReserves: Number,
    plAccount: Number,
    unsecuredLoansWorkingCapital: Number,
    termsLoansWorkingCapital: Number,
    termDeposits: Number,
    otherTermLiabilities_workingCapital: Number,
    longTermSources: Number,
    netFixedAssets: Number,
    investmentsWorkingCapital: Number,
    otherNonCurrentAssetsWorkingCapital: Number,
    advtoSuppliersofCapGoods: Number,
    intangibleAssets: Number,
    longTermUses: Number,
    netWorkingCapital: Number,
    ca_cl: Number,
    controlTotal: Number,
    nWCastoTca: Number,
    netSalesKeyFinancialIndicators: Number,
    perincrease: Number,
    netProfitafterTax: Number,
    pertoSales: Number,
    cashAccruals: Number,
    tnw: Number,
    tqlAndTnw: Number,
    nwc: Number,
    currentRatio: Number,
    netSales: Number,
    netProfit: Number,
    depreciationKeyFianancialIndicators: Number,
    netSalesParticulars: Number,
    purchases: Number,
    sundryCreditorsParticulars: Number,
    crsNoOfDaysPurchase: Number,
    receivablesParticular: Number,
    recievableNoOfDaysSales: Number,
    stockParticular: Number,
    stockNoOfDaysSales: Number,
    totalCurrentAssetsWcg: Number,
    otherCurrentLiabilitiesWcg: Number,
    wgc: Number,
    marginwcg: Number,
    actualProjectedNWCWcg: Number,
    marginwcg_actualProjectedNWCWcg: Number,
    marginwcg_marginwcg_actualProjectedNWCWcg: Number,
    mpbfaspermethodFirst: Number,
    totalCurrentAssetsTca: Number,
    otherCurrentLiabilitiesTca: Number,
    wgcTca: Number,
    marginTca: Number,
    mpbfaspermethodTca: Number,
    actualProjectedSales: Number,
    Wcgofsales: Number,
    salesasmargin: Number,
    minimumPermissionFinance: Number,
    turnover: Number,
    marginMoneybyBorrower: Number,
    actualProjectedNWC: Number,
    stock_stock: Number,
    dayscostofproduction: Number,
    recievable_particular: Number,
    daysSales: Number,
    otherCurrentAssets: Number,
    CurrentAssetsTotal: Number,
    loansandadvances: Number,
    holdingperiod: Number,
    cashbankbalances: Number,
    totalCurrentAssetsInPerc: Number,
    assetTotalCurrent: Number,
    sundryParticularsCreditors: Number,
    daysPurchases: Number,
    oclProvisions: Number,
    toTCL: Number,
    liabilitiesCurrentTotal: Number,
    percentOfSales: Number,
    salesAsMargin: Number,
    actualProjectsNwc: Number,
    percentOfSales_salesAsMargin: Number,
    percentOfSales_actualProjectsNwc: Number,
    applicantsRequestTom: Number,
    minimumof: Number,
    costOfProducttionSales: Number,
    sales: Number,
    npatDscr: Number,
    depriciationDscr: Number,
    dscrInterest: Number,
    existingInterest: Number,
    totalDscr: Number,
    dscrPrinciple: Number,
    interestDscr: Number,
    repaymentexisting: Number,
    totalB: Number,
    pbdit: Number
}, { timestamps: true });

const FormData = mongoose.model('FormData', formDataSchema);

export default FormData;
